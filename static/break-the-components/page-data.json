{"componentChunkName":"component---src-templates-post-template-js","path":"/../../static/break-the-components","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"id":"506d4c05-4a83-5bfb-a448-71e48d9dec45","html":"<p> 이번 글에서는 제가 경험 했던 ‘잘못된 추상화’와 개선을 위해 시도했던 것들을 공유하려고 합니다.</p>\n<hr>\n<p> 리액트 개발을 하며 다양한 컴포넌트를 만들어 보았습니다. 그리고 <del>예상하셨듯</del> 대부분의 컴포넌트는 Deprecated (혹은 제거) 되었습니다.</p>\n<p>제가 만든 컴포넌트가 제거된 이유는 크게 두 가지 였습니다.</p>\n<ol>\n<li><strong>잘못된 추상화</strong>: 추상화가 잘못된 컴포넌트는 시간이 지날수록 잘못된 방향으로 진화되고 결국 관리가 어려워져 쓰이지 않게되었습니다.</li>\n<li><strong>해당 UI 혹은 기능이 더이상 필요하지 않다</strong>: 이것은 비즈니스와 관련된 문제이기 때문에 여기서는 다루지 않겠습니다.</li>\n</ol>\n<p>프론트엔드 개발자로서 개선을 할 수 있는 부분은 잘못된 추상화였습니다. 추상화가 잘못되어 제거된 컴포넌트의 생애주기(?)는 대부분 아래와 같았습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">/* 컴포넌트 탄생! 깔끔하다 ✨ */</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span>\n  <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>안내<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>이것은 멋진 내용을 담고 있는 안내입니다.<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">button</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n    label<span class=\"token punctuation\">:</span> <span class=\"token string\">'확인'</span><span class=\"token punctuation\">,</span>\n    onClick<span class=\"token punctuation\">:</span> doSomething<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">/**************************/</span>\n<span class=\"token comment\">/********* 1주일 뒤 *********/</span>\n<span class=\"token comment\">/**************************/</span>\n\n<span class=\"token comment\">/**\n * \"다이얼로그 버튼이 하단에 있던데, 상단에 있는 경우도 필요합니다!\"\n *\n * -> props 추가 (buttonPosition)\n */</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span>\n  <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>안내<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>이것은 멋진 내용을 담고 있는 안내입니다.<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">button</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n    label<span class=\"token punctuation\">:</span> <span class=\"token string\">'확인'</span><span class=\"token punctuation\">,</span>\n    onClick<span class=\"token punctuation\">:</span> doSomething\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">buttonPosition</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n\n<span class=\"token comment\">/**************************/</span>\n<span class=\"token comment\">/********* 2주일 뒤 *********/</span>\n<span class=\"token comment\">/**************************/</span>\n\n<span class=\"token comment\">/**\n * \"두 개의 버튼이 있는 다이얼로그가 필요해요! 둘 중 하나는 Primary, 하나는 Secondary 타입으로요\"\n *\n * -> props 변경 (button -> buttons, variant 추가)\n */</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span>\n  <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>안내<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>이것은 멋진 내용을 담고 있는 안내입니다.<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">buttonPosition</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">buttons</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'확인'</span><span class=\"token punctuation\">,</span>\n      onClick<span class=\"token punctuation\">:</span> doSomething<span class=\"token punctuation\">,</span>\n      variant<span class=\"token punctuation\">:</span> <span class=\"token string\">'primary'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'취소'</span><span class=\"token punctuation\">,</span>\n      onClick<span class=\"token punctuation\">:</span> doSomethingElse<span class=\"token punctuation\">,</span>\n      variant<span class=\"token punctuation\">:</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n\n<span class=\"token comment\">/**************************/</span>\n<span class=\"token comment\">/********* 1개월 뒤 *********/</span>\n<span class=\"token comment\">/**************************/</span>\n\n<span class=\"token comment\">/**\n * \"버튼이 세로로 나열되어 있는 다이얼로그도 추가해주세요!\"\n * \"title 위에 아이콘도 하나 넣어주세요!\"\n *\n * -> props 추가 (buttonAlign, iconAboveTitle)\n */</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span>\n  <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>안내<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>이것은 멋진 내용을 담고 있는 안내입니다.<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">buttonPosition</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">buttons</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'확인'</span><span class=\"token punctuation\">,</span>\n      onClick<span class=\"token punctuation\">:</span> doSomething<span class=\"token punctuation\">,</span>\n      variant<span class=\"token punctuation\">:</span> <span class=\"token string\">'primary'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'취소'</span><span class=\"token punctuation\">,</span>\n      onClick<span class=\"token punctuation\">:</span> doSomethingElse<span class=\"token punctuation\">,</span>\n      variant<span class=\"token punctuation\">:</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">buttonAlign</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">iconAboveTitle</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fancy-icon<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n\n<span class=\"token comment\">/**************************/</span>\n<span class=\"token comment\">/********* 6개월 뒤 *********/</span>\n<span class=\"token comment\">/**************************/</span>\n\n<span class=\"token operator\">&lt;</span>Dialouge\n  <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>프많쓰않<span class=\"token punctuation\">}</span> <span class=\"token comment\">// 프롭스가 많지만 쓰지 않는다</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p><img src=\"/break-the-components/i-dont-feel-so-good.gif\" alt=\"i-dont-feel-so-good\"></p>\n<p>컴포넌트 기반 UI 개발을 하시는 분들이라면 한번쯤은 위와 같은 경험이 있으실 겁니다. 이러한 형태의 (자이언트) 컴포넌트는 시간이 지나며 props의 개수가 계속해서 증가합니다. (<del><a href=\"https://twitter.com/gurlcode/status/1002110517094371328\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apropcalypse</a>라고 부르기도 합니다.</del>)\nprops가 많아지면 다음과 같은 문제들이 발생하기 시작합니다.</p>\n<h4 id=\"props가-많아지는-경우-발생하는-문제\"><a href=\"#props%EA%B0%80-%EB%A7%8E%EC%95%84%EC%A7%80%EB%8A%94-%EA%B2%BD%EC%9A%B0-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"props가 많아지는 경우 발생하는 문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;props가 많아지는 경우 발생하는 문제></h4>\n<ol>\n<li>각 props가 어떤 역할을 하는지 <strong>파악하기 어려워진다.</strong></li>\n<li>파악하기 어려운 props를 설명해주기 위한 <strong>주석이나 문서 작성 및 관리 필요</strong></li>\n<li>요구사항이 복잡해질수록 기괴한 props명이 나올 확률 ↑ <strong>작명 센스 필요</strong></li>\n<li>위와 같은 이유들로 인해 컴포넌트를 <strong>변경하기가 어렵고 두려워진다.</strong></li>\n</ol>\n<p>이와 같이 다양한 문제를 안고 있는 컴포넌트는 추상화가 잘 되었다고 말하기 어렵습니다.\n위에 있는 <code class=\"language-text\">&lt;Dialogue&gt;</code> 컴포넌트는 재사용성은 갖추었지만 <strong>유연성은 갖추지 못하였습니다</strong>.</p>\n<p><code class=\"language-text\">&lt;Dialogue&gt;</code> 컴포넌트가 유연하지 않는 이유는 무엇일까요? 저는 다음과 같은 이유라고 생각합니다.</p>\n<blockquote>\n<h3 id=\"비즈니스-로직이-컴포넌트-안에-들어있다\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81%EC%9D%B4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%95%88%EC%97%90-%EB%93%A4%EC%96%B4%EC%9E%88%EB%8B%A4\" aria-label=\"비즈니스 로직이 컴포넌트 안에 들어있다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비즈니스 로직이 컴포넌트 안에 들어있다.</h3>\n</blockquote>\n<br />\n<p>버튼 개수나 위치, 버튼의 배열, 일러스트의 위치, 이 모든 것들은 비즈니스 로직입니다. 이러한 규칙은 시간이 지나며 변경될 여지가 많습니다.</p>\n<p>즉, 우리는 비즈니스 로직을 밖으로 꺼내어야 합니다! 어떻게 꺼낼 수 있을까요?</p>\n<hr>\n<h2 id=\"리액트는-상속보다는-조합\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8%EB%8A%94-%EC%83%81%EC%86%8D%EB%B3%B4%EB%8B%A4%EB%8A%94-%EC%A1%B0%ED%95%A9\" aria-label=\"리액트는 상속보다는 조합 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트는 상속보다는 조합</h2>\n<p><img src=\"/break-the-components/compose.jpeg\" alt=\"compose-all-the-thing\"></p>\n<p>리액트는 조합에 특화된 설계를 갖고 있습니다. 공식 홈페이지에도 <a href=\"https://reactjs.org/docs/composition-vs-inheritance.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">상속보다는 조합</a> 이라는 내용의 글이 있습니다. ‘조합’이란 직역하면, 여러 개의 조각을 끼워 맞춘다는 의미죠.</p>\n<p>그런데 우리가 위에서 보았던 <code class=\"language-text\">&lt;Dialogue&gt;</code> 컴포넌트는 조합을 사용하는 것 같지 않습니다. 여러 개의 조각을 쓰기 보다는 하나의 큰 덩어리를 사용하는 모습입니다. 따지자면 조합보다는 상속에 더 가까운 것 같네요.</p>\n<p>그렇다면 저 자이언트 컴포넌트를 쪼개어 조합을 사용하도록 바꾸어 보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Title</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        안내\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Title</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Description</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        이것은 멋진 내용을 담고 있는 안내입니다.\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Description</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.ButtonContainer</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Button</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>secondary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>doSomethingElse<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          취소\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Button</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>doSomething<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          확인\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.ButtonContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  )\n}</span></code></pre></div>\n<p>음.. 너무 장황한 것 같기도 하네요. </p>\n<p>그렇다면 <code class=\"language-text\">&lt;Title&gt;</code> 과 <code class=\"language-text\">&lt;Description&gt;</code> 을 <code class=\"language-text\">&lt;Content&gt;</code> 라는 컴포넌트로 합치겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">Dialogue<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">Content</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> description <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Title</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Title</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Description</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Description</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Content</span></span>\n        <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>안내<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>이것은 멋진 내용을 담고 있는 안내입니다.<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.ButtonContainer</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Button</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>secondary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>doSomethingElse<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          취소\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Button</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>doSomething<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          취소\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.ButtonContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  )\n}</span></code></pre></div>\n<p>전보다는 나아졌네요! 자 그러면 자이언트 컴포넌트와 한번 비교해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 자이언트 컴포넌트</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span>\n  <span class=\"token attr-name\">iconAboveTitle</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fancy-icon<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>안내<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>이것은 멋진 내용을 담고 있는 안내입니다.<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">buttonPosition</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bottom<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">buttonAlign</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">buttons</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    label<span class=\"token punctuation\">:</span> <span class=\"token string\">'확인'</span><span class=\"token punctuation\">,</span>\n    onClick<span class=\"token punctuation\">:</span> doSomething<span class=\"token punctuation\">,</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token string\">'cta'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    label<span class=\"token punctuation\">:</span> <span class=\"token string\">'취소'</span><span class=\"token punctuation\">,</span>\n    onClick<span class=\"token punctuation\">:</span> doSomethingElse<span class=\"token punctuation\">,</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n\n<span class=\"token comment\">// 조합기반 컴포넌트</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Icon</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fancy<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> \n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Content</span></span>\n    <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>안내<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>이것은 멋진 내용을 담고 있는 안내입니다.<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.ButtonContainer</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Button</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>secondary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>doSomethingElse<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      취소\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialogue.Button</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>doSomething<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      확인\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue.ButtonContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialogue</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>조합기반 컴포넌트가 코드양이 더 많고 더 지저분해 보이기도 하네요.</p>\n<p>하지만 조합을 이용하게 되면서 앞서 이야기 했던 자이언트 컴포넌트의 <strong>문제점은 더이상 존재하지 않는 것 같습니다.</strong></p>\n<p>조합을 이용한 다이얼로그는 <code class=\"language-text\">onClick</code>, <code class=\"language-text\">align</code>, <code class=\"language-text\">title</code> 등 명확한 props만 남게 되기 때문에</p>\n<ol>\n<li>개발자가 각 props가 <strong>어떤 역할을 하는지 파악하기 수월</strong>하고</li>\n<li>props가 명확하기 때문에 <strong>별도의 문서화를 할 필요가 없으며</strong></li>\n<li>모호한 props가 없기 때문에 <strong>작명 고민을 할 필요도 없습니다.</strong></li>\n<li>따라서 컴포넌트 명세를 <strong>변경해야할 때 어디를 고쳐야할지도 명확</strong>합니다.</li>\n</ol>\n<p>우리는 조합을 사용함으로써 자이언트 컴포넌트의 문제를 어느정도 해결할 수 있게 되었습니다. 그렇다면 조합의 어떤 특징이 이러한 변화를 만들 수 있었던 걸까요?</p>\n<p>조합의 특징은  <code class=\"language-text\">&lt;Dialogue&gt;</code> 컴포넌트가 담당하던 역할이 어떻게 바뀌었는지를 따져보면 힌트를 얻을 수 있습니다.</p>\n<hr>\n<h2 id=\"제어역전-inversion-of-control\"><a href=\"#%EC%A0%9C%EC%96%B4%EC%97%AD%EC%A0%84-inversion-of-control\" aria-label=\"제어역전 inversion of control permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어역전 (Inversion of Control)</h2>\n<p><code class=\"language-text\">&lt;Dialogue&gt;</code> 컴포넌트의 역할이 조합을 사용하기 전과 후에 어떻게 달라졌을까요?</p>\n<h4 id=\"before--자이언트-컴포넌트일-때-담당하던-역할\"><a href=\"#before--%EC%9E%90%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%BC-%EB%95%8C-%EB%8B%B4%EB%8B%B9%ED%95%98%EB%8D%98-%EC%97%AD%ED%95%A0\" aria-label=\"before  자이언트 컴포넌트일 때 담당하던 역할 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before : 자이언트 컴포넌트일 때 담당하던 역할</h4>\n<ol>\n<li>전달받은 props 값에 따라 내부 UI 컴포넌트 배치\n(Title, Description, Button이 어떠한 순서와 조합으로 그려질지 결정)</li>\n<li><strong>Title, Description, Button의 style결정</strong>\n(글자크기, 색상, 간격 등..)</li>\n</ol>\n<h4 id=\"after--조합-버전에서-담당하는-역할\"><a href=\"#after--%EC%A1%B0%ED%95%A9-%EB%B2%84%EC%A0%84%EC%97%90%EC%84%9C-%EB%8B%B4%EB%8B%B9%ED%95%98%EB%8A%94-%EC%97%AD%ED%95%A0\" aria-label=\"after  조합 버전에서 담당하는 역할 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>After : 조합 버전에서 담당하는 역할</h4>\n<ol>\n<li><strong>Title, Description, Button의 style결정</strong>\n(글자크기, 색상, 간격 등..)</li>\n</ol>\n<p>조합 버전에서 <code class=\"language-text\">&lt;Dialogue&gt;</code>의 역할이 줄어들었습니다! 기존의 ‘어떻게 배치할까’에 대한 역할을 <code class=\"language-text\">&lt;Dialogue&gt;</code> 가 더이상 담당하고 있지 않습니다. 해당 역할은 <code class=\"language-text\">&lt;Dialogue&gt;</code> 를 사용하는 개발자에게 넘어갔습니다! 조합 기반의 컴포넌트를 사용하면 페이지를 개발할 때 해야하는 일이 하나 더 늘어나게 되지만 그로 인해 유연성을 갖는다는 장점을 얻게 됩니다.</p>\n<p>프로그래밍에서 <strong>API를 사용하는 쪽으로 특정 역할을 넘기는 패턴을 제어역전(Inversion of Control, IoC)</strong>라고 부르는데 위와 같이 페이지 개발 시 컴포넌트를 조합하여 만드는 것도 제어역전의 한 형태라고 볼 수 있습니다.</p>\n<p>사실 이러한 제어역전 패턴은 우리 주변에서 이미 흔하게 사용되고 있습니다. JS Array의 <code class=\"language-text\">map</code>, <code class=\"language-text\">forEach</code>, <code class=\"language-text\">filter</code>, <code class=\"language-text\">reduce</code>가 대표적인 예입니다.</p>\n<p>아래는 동물리스트에서 강아지를 골라내는 JS 코드입니다. 제어역전을 사용하지 않는 filter와 사용한 filter를 통해 그 차이를 다시한번 살펴보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 일반 filter</span>\n<span class=\"token keyword\">const</span> dogs <span class=\"token operator\">=</span> <span class=\"token function\">filterDogs</span><span class=\"token punctuation\">(</span>animals<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 제어역전 filter</span>\n<span class=\"token keyword\">const</span> dogs <span class=\"token operator\">=</span> animals<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animal</span> <span class=\"token operator\">=></span> animal<span class=\"token punctuation\">.</span>species <span class=\"token operator\">===</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li><strong>일반 filter</strong> 는 <strong>강아지를 필터링한다</strong>는 것을 명시함으로 선언적인 코드가 갖는 장점을 갖게 되지만 필터링 로직이 조금이라도 바뀔 경우 두 번째 파라미터로 option 객체를 받는 등 기존 로직을 변경해야합니다.</li>\n<li><strong>제어역전 filter</strong>는 필터링 기능만 제공하고 어떻게 필터링할지는 사용자에게 맡기고 있습니다. 따라서 필터링 로직에 어떠한 변화가 생기든 기존 filter 함수는 그대로 남아있을 수 있습니다.</li>\n</ol>\n<p>리액트 컴포넌트 조합은 이와 같은 제어역전의 특징을 갖고 있습니다. 컴포넌트 조합이 유연성만 갖고 있는 것은 아닙니다. 조금 더 깔끔한 코드를 작성하는 데에도 도움이 됩니다.</p>\n<hr>\n<h2 id=\"compound-components\"><a href=\"#compound-components\" aria-label=\"compound components permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compound Components</h2>\n<p><a href=\"https://reactrouter.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-router</a>, <a href=\"https://remix.run\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">remix</a> 개발자로 유명한 <a href=\"https://twitter.com/ryanflorence\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">라이언 플로런스</a>씨가 자주 언급하는 패턴 중 하나인 <a href=\"https://www.youtube.com/watch?v=hEGg-3pIHlE&#x26;feature=youtu.be\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Compound Components</a>는 조합의 대표적인 사례입니다.</p>\n<p>Compound Components는 단어 의미 그대로 ‘컴포넌트의 복합체’ 라는 의미입니다. 위에서 보았던 <code class=\"language-text\">&lt;Dialogue&gt;</code> 의 조합 버전처럼 사용하는 쪽에서 여러 개의 컴포넌트를 조합하여 사용하는 것을 Compound Components라고 부릅니다.</p>\n<p>하지만 위에서 보았던 <code class=\"language-text\">&lt;Dialogue&gt;</code> 컴포넌트는 Compound Components의 장점을 모두 보여주기에는 부족한 예시였습니다. Compound Components는 React hooks 나 다른 패턴과 함께 사용하면  State를 숨김으로써 더 깔끔한 추상화를 제공할 수 있다는 장점이 있습니다.</p>\n<p>설명을 위해 Tab 컴포넌트를 만들어 보겠습니다. 먼저 Tab을 자이언트 컴포넌트로 만든다면 다음과 같이 사용될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>tab<span class=\"token punctuation\">,</span> setTab<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>tabItems<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span>\n      <span class=\"token attr-name\">items</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tabItems<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">onSelectTab</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setTab<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">selectedTab</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tab<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>자 이제 조합으로 쪼개볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedTab<span class=\"token punctuation\">,</span> setTab<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialTab<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>tabItems<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tabItem</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs.Item</span></span>\n          <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tabItem<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">isSelected</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>selectedTab <span class=\"token operator\">===</span> tabItem<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setTab<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>tabItem<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs.Item</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">&lt;Dialogue&gt;</code> 컴포넌트처럼 유연한 컴포넌트로 만들어졌습니다. alignment를 바꾸거나 탭 컴포넌트 안에 다른 컴포넌트를 삽입하는 요청도 무리 없이 수행할 수 있을 것 같습니다.</p>\n<p>그런데 위에서 이야기했듯이 Compound Components는 State를 숨길 수 있다는 장점도 갖는다는 하였죠.</p>\n<p>State를 숨기면 아마 다음과 같은 모습일 것 같네요.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>tabItems<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tabItem</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs.Item</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tabItem<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>tabItem<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs.Item</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>State는 어디로 숨었을까요? State는 컴포넌트 트리의 가장 상위에 있는 컴포넌트인 <code class=\"language-text\">&lt;Tabs&gt;</code>가 가지고 있어야 합니다. <code class=\"language-text\">React.Children</code>, <code class=\"language-text\">React.cloneElement</code>를 사용하면 State를 숨긴 Tabs를 만들 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Tabs.jsx</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Tabs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedTab<span class=\"token punctuation\">,</span> setTab<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialTab<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tab-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">,</span> <span class=\"token parameter\">child</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        React<span class=\"token punctuation\">.</span><span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n          isSelected<span class=\"token punctuation\">:</span> child<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> selectedTab<span class=\"token punctuation\">,</span>\n          <span class=\"token function-variable function\">onSelect</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTab</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nTabs<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">Item</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isSelected<span class=\"token punctuation\">,</span> onSelect<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span>\n    <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`tab-item </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isSelected <span class=\"token operator\">?</span> <span class=\"token string\">'selected'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>그런데 State를 숨긴 Tab 컴포넌트를 보니 뭔가 떠오르시지 않나요? 사실 html 태그중에 이와 유사한 형태로 사용되는 태그가 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>당근<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>양파<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>마늘<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>배추<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>오이<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-text\">&lt;select&gt;</code> 태그도 상태는 감추고 조합의 형태로 사용되는 Compound Components의 모습을 하고 있습니다. (<del>select도 조합의 민족이었어!</del>)</p>\n<hr>\n<p>그런데 Tabs 컴포넌트에는 한 가지 아쉬운 점이 있습니다. <code class=\"language-text\">&lt;Tabs&gt;</code> 에서 <code class=\"language-text\">cloneElement</code> 를 사용하고 있기 때문에 <strong><em><code class=\"language-text\">&lt;Tabs.Item&gt;</code> 이 <code class=\"language-text\">&lt;Tabs&gt;</code> 의 바로 아래 자식으로 와야한다</em></strong> 라는 규칙이 생깁니다. 이렇게 되면 <code class=\"language-text\">children</code>의 구조를 유연하게 변경할 수 없게 됩니다. 우리는 <code class=\"language-text\">&lt;Tabs.Item&gt;</code>이 <code class=\"language-text\">&lt;Tabs&gt;</code>가 가진 state를 <code class=\"language-text\">children</code>의 구조와 상관 없이 사용할 수 있도록 해주어야 합니다.</p>\n<p>다행히 우리에겐 또다른 방법이 있습니다.</p>\n<h3 id=\"1-context를-이용한-개선\"><a href=\"#1-context%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EA%B0%9C%EC%84%A0\" aria-label=\"1 context를 이용한 개선 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Context를 이용한 개선</h3>\n<p>첫 번째 방법은 context 를 이용하는 것입니다. <code class=\"language-text\">&lt;Tabs&gt;</code> 에서 context에게 상태를 전달해주고 <code class=\"language-text\">&lt;Tabs.Item&gt;</code>은 context로부터 상태를 전달 받는 구조입니다. <code class=\"language-text\">&lt;Tabs.Item&gt;</code>은 컴포넌트 트리에서 <code class=\"language-text\">&lt;Tabs&gt;</code>보다 아래쪽에 있기만 한다면 <code class=\"language-text\">useContext</code> 를 통해 해당 값에 접근할 수 있기 때문에 <code class=\"language-text\">&lt;Tabs&gt;</code> 의 바로 아래 자식이어야한다는 제약이 사라집니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Tabs.jsx</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> TabContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Tabs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedTab<span class=\"token punctuation\">,</span> setTab<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialTab<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TabContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> selectedTab<span class=\"token punctuation\">,</span> setTab <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tab-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TabContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nTabs<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">Item</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>TabContext<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ctx <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;Tabs.Item> 컴포넌트는 &lt;Tabs> 컴포넌트 아래에서만 사용될 수 있습니다.'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> selectedTab<span class=\"token punctuation\">,</span> setTab <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> ctx\n  \n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span>\n      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTab</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`tab-item </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>selectedTab <span class=\"token operator\">===</span> value <span class=\"token operator\">?</span> <span class=\"token string\">'selected'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Page.jsx</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* 원하는 대로 children을 구성할 수 있습니다. */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BetweenComponent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>tabItems<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tabItem</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs.Item</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tabItem<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>tabItem<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs.Item</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BetweenComponent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>*<em>다만 context를 사용하게 되면 context의 value가 바뀌게 됐을 때 하위 컴포넌트들의 re-rendering이 발생하므로 <code class=\"language-text\">Context.Provider</code>를 가진 부모가 가능한 가까운 곳에 있는 것이 좋습니다.</em></p>\n<h3 id=\"2-render-props를-이용한-개선\"><a href=\"#2-render-props%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EA%B0%9C%EC%84%A0\" aria-label=\"2 render props를 이용한 개선 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Render Props를 이용한 개선</h3>\n<p><a href=\"https://reactjs.org/docs/render-props.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Render Props</a>가 생소하신 분들도 계실텐데요, Render Props는  Hooks가 나오기 이전에 리액트 컴포넌트의 상태관리 로직을 추상화하는 방법으로 자주 사용되던 패턴입니다. </p>\n<p>핵심만 말씀 드리면 컴포넌트의 <code class=\"language-text\">children</code>으로 함수를 전달하는 것인데, 그 함수는 리액트 엘리먼트를 반환하는 함수여야합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 일반 컴포넌트</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  눌러주세요\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">// Render Props 컴포넌트</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">눌러주세요</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>왜 이렇게 할까요? 우리는 <code class=\"language-text\">children</code>으로 함수를 전달하고 있습니다. 그리고 함수는 parameter를 받을 수 있습니다. 컴포넌트가 parameter값을 넣어줄 수 있다면 페이지를 개발하는 단계에서 해당 parameter를 이용해 원하는대로 요리를 할 수 있습니다.</p>\n<p>설명이 어려우셨나요? Render Props 패턴으로 구현된 Tab을 보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Tabs.jsx</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Tabs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedTab<span class=\"token punctuation\">,</span> setTab<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialTab<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tab-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span>selectedTab<span class=\"token punctuation\">,</span> setTab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nTabs<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">Item</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isSelected<span class=\"token punctuation\">,</span> onSelect<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span>\n    <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`tab-item </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isSelected <span class=\"token operator\">?</span> <span class=\"token string\">'selected'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Page.jsx</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">selectedTab<span class=\"token punctuation\">,</span> setTab</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        tabItems<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tabItem</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs.Item</span></span>\n            <span class=\"token attr-name\">isSelected</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tabItem <span class=\"token operator\">===</span> selectedTab<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTab</span><span class=\"token punctuation\">(</span>tabItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>tabItem<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs.Item</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>주목하셔야하는 부분은 두 곳입니다.</p>\n<ol>\n<li><code class=\"language-text\">&lt;Tabs&gt;</code> 컴포넌트가 <code class=\"language-text\">children</code>을 함수로써 호출하고 있다.</li>\n<li><code class=\"language-text\">&lt;Tabs&gt;</code> 를 이용하는 Page 컴포넌트에서 <code class=\"language-text\">&lt;Tabs&gt;</code> 의 <code class=\"language-text\">children</code>으로 함수를 전달하고 있다.</li>\n</ol>\n<p><code class=\"language-text\">&lt;Tabs&gt;</code>가 <code class=\"language-text\">children</code>을 함수로 선언하고 return 문에서 state를 넣어 호출해주고 있기 때문에 <code class=\"language-text\">&lt;Tabs&gt;</code>를 사용하는 페이지에서 <code class=\"language-text\">&lt;Tabs&gt;</code> 내부에 있는 state를 쓸 수 있도록 만들어 주었습니다.</p>\n<p>이렇게되면 <code class=\"language-text\">&lt;Tabs&gt;</code> 컴포넌트의 유연함은 더욱 증가하게 됩니다. <code class=\"language-text\">isSelected</code>, <code class=\"language-text\">onSelect</code> 까지 컴포넌트 사용자가 결정하게 바뀌었습니다. (더 유연하다고 더 좋은 추상화는 아니기 때문에 각 컴포넌트에게 맞는 적당한 추상화를 고민해 볼 필요가 있습니다.)</p>\n<hr>\n<p>Render Props를 사용하니 Context나 <code class=\"language-text\">cloneElement</code>를 사용할 때보다 <code class=\"language-text\">&lt;Tabs&gt;</code>와 <code class=\"language-text\">&lt;Tabs.Item&gt;</code>의 코드 양이 줄었습니다. 대신 Tabs를 사용하는 Page 컴포넌트의 코드 양은 증가되었습니다. 컴포넌트를 조합하는 모습이 1단계 제어역전이었다면, 거기에 Render Props까지 적용하는 것이 2단계 제어역전이라고 볼 수 있습니다.</p>\n<p>*<em>다만 render props는 함수를 전달하기 때문에 rendering이 일어날 때마다 새로운 props로 인식됩니다. 최적화가 필요하면 useCallback을 사용하거나 render props를 사용을 다시 고민해봐야합니다.</em></p>\n<hr>\n<h2 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>다양한 사례(use-case)를 포용할 수 컴포넌트는 <strong>재사용 가능한</strong>, <strong>유연한 컴포넌트</strong>라고 할 수 있습니다. 조합과 제어역전은 비즈니스로직을 컴포넌트 바깥으로 끄집어내어 다양한 사례(use-case)를 포용할 수 컴포넌트를 만들 수 있게 해주었습니다.</p>\n<p>하지만 제어역전은 코드양이 많아지고 한 눈에 들어오지 않는다는 <strong>단점</strong>도 갖고 있습니다. 변경될 여지가 있어 보이는 코드에 제어역전을 사용하는 것은 좋은 안전장치가 될 수 있지만 역할이 명확한 컴포넌트라면 제어역전이 오히려 개발 경험을 해칠 수도 있습니다.</p>\n<p>비즈니스가 변화해온 양상을 지켜보고 어떻게 변화할지 예측하고 그 변화양상에 맞는 컴포넌트를 만드는 습관은 멋진 개발 경험을 만든는데 도움이 될 수 있다고 생각합니다.</p>\n<h3 id=\"참고한-컨텐츠\"><a href=\"#%EC%B0%B8%EA%B3%A0%ED%95%9C-%EC%BB%A8%ED%85%90%EC%B8%A0\" aria-label=\"참고한 컨텐츠 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고한 컨텐츠</h3>\n<ul>\n<li>Ryan Florence - <a href=\"https://www.youtube.com/watch?v=hEGg-3pIHlE&#x26;feature=youtu.be\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Compound Components</a> </li>\n<li>Michael Jackson - <a href=\"https://www.youtube.com/watch?v=BcVAq3YFiuc&#x26;feature=youtu.be\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Never Write Another HoC</a></li>\n<li>Kent C. Dodds - <a href=\"https://kentcdodds.com/blog/inversion-of-control/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inversion of Control</a></li>\n<li>Jenn Creighton - <a href=\"https://speakerdeck.com/jenncreighton/the-how-and-why-of-flexible-react-components-289aa486-464a-4dea-b89a-6f92d0af6606\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The how and why of flexible React components</a></li>\n</ul>","fields":{"slug":"../../static/break-the-components","tagSlugs":["/tag/component/","/tag/react/","/tag/composition/","/tag/ioc/","/tag/compound-components/","/tag/render-props/"]},"frontmatter":{"date":"2020-12-26T01:30:00.169Z","description":"feat. 조합, IoC","tags":["component","react","composition","ioc","compound components","render props"],"title":"단단한 컴포넌트 부수기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"../../static/break-the-components"}}}