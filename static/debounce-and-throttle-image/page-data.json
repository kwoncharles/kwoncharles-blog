{"componentChunkName":"component---src-templates-post-template-js","path":"/../../static/debounce-and-throttle","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"id":"a00ea527-f7d0-5bac-96aa-c5e2bcda926d","html":"<h1 id=\"intro\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h1>\n<p>debounce와 throttle은 프로그래밍에서 요청이나 처리의 빈도를 제한하거나 지연시키고자 할 때 자주 사용됩니다. 둘은 위와 같은 상황에서 쓰인다는 것에서 비슷하지만 동작하는 방식은 조금 다릅니다. </p>\n<h1 id=\"심플한-정의\"><a href=\"#%EC%8B%AC%ED%94%8C%ED%95%9C-%EC%A0%95%EC%9D%98\" aria-label=\"심플한 정의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>심플한 정의</h1>\n<p>debounce와 throttle을 한마디로 정의하면 다음과 같습니다.</p>\n<h3 id=\"debounce\"><a href=\"#debounce\" aria-label=\"debounce permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>debounce</h3>\n<blockquote>\n<p>요청이 들어오고 일정 시간을 기다린 후 요청을 수행한다. 만약 일정 시간 안에 같은 요청이 추가로 들어오면 <strong>이전 요청은 취소된다.</strong></p>\n</blockquote>\n<h3 id=\"throttle\"><a href=\"#throttle\" aria-label=\"throttle permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>throttle</h3>\n<blockquote>\n<p>일정 시간 동안 요청이 <strong>한 번만</strong> 수행되도록 한다.</p>\n</blockquote>\n<hr>\n<p>백문이 불여일견입니다. 예제코드를 살펴보겠습니다. 예제에서는 <code class=\"language-text\">lodash</code>에서 제공하는 <code class=\"language-text\">debounce</code>, <code class=\"language-text\">throttle</code>을 사용하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> throttle  <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash/throttle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> throttleButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'throttle-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nthrottleButton<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Throttled Button Clicked'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ss.SS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>먼저 throttle입니다. 아래 코드는 버튼이 클릭되면 console에 현재시간(초, 밀리초)를 출력합니다. throttle time은 500ms로 설정했습니다.</p>\n<p>먼저 debounce입니다. 아래 코드는 버튼이 클릭되면 console에 현재시간(초, 밀리초)를 출력합니다. debounce 시간은 1초입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> debounce  <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash/debounce'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> debounceButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'debounce-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndebounceButton<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Debounce Button Clicked'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ss.SS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 10초동안 버튼을 계속해서 클릭해보겠습니다.</p>\n<!-- ![throttle예제](/debounce-and-throttle/throttle-console.png) -->\n<p><img src=\"/lambda-deploy-automate/set_repository_variables-min.png\" alt=\"set_repository_variables-min.png\"></p>\n<blockquote>\n<h5 id=\"debounce는-전기공학에서-쓰이던-전문용어입니다-네이버-지식백과에서는-기계식-스위치의-동작을-전기적-신호로-바꿀-때-생기는-진동-잡음을-제거하기-위하여-사용하는-하드웨어의-지연-회로-라고-소개하고-있습니다\"><a href=\"#debounce%EB%8A%94-%EC%A0%84%EA%B8%B0%EA%B3%B5%ED%95%99%EC%97%90%EC%84%9C-%EC%93%B0%EC%9D%B4%EB%8D%98-%EC%A0%84%EB%AC%B8%EC%9A%A9%EC%96%B4%EC%9E%85%EB%8B%88%EB%8B%A4-%EB%84%A4%EC%9D%B4%EB%B2%84-%EC%A7%80%EC%8B%9D%EB%B0%B1%EA%B3%BC%EC%97%90%EC%84%9C%EB%8A%94-%EA%B8%B0%EA%B3%84%EC%8B%9D-%EC%8A%A4%EC%9C%84%EC%B9%98%EC%9D%98-%EB%8F%99%EC%9E%91%EC%9D%84-%EC%A0%84%EA%B8%B0%EC%A0%81-%EC%8B%A0%ED%98%B8%EB%A1%9C-%EB%B0%94%EA%BF%80-%EB%95%8C-%EC%83%9D%EA%B8%B0%EB%8A%94-%EC%A7%84%EB%8F%99-%EC%9E%A1%EC%9D%8C%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%98%EC%97%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%9D%98-%EC%A7%80%EC%97%B0-%ED%9A%8C%EB%A1%9C-%EB%9D%BC%EA%B3%A0-%EC%86%8C%EA%B0%9C%ED%95%98%EA%B3%A0-%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"debounce는 전기공학에서 쓰이던 전문용어입니다 네이버 지식백과에서는 기계식 스위치의 동작을 전기적 신호로 바꿀 때 생기는 진동 잡음을 제거하기 위하여 사용하는 하드웨어의 지연 회로 라고 소개하고 있습니다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>debounce는 전기공학에서 쓰이던 전문용어입니다. <a href=\"https://terms.naver.com/entry.nhn?docId=820206&#x26;cid=50376&#x26;categoryId=50376\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">네이버 지식백과</a>에서는 <em>“기계식 스위치의 동작을 전기적 신호로 바꿀 때 생기는 진동 잡음을 제거하기 위하여 사용하는 하드웨어의 지연 회로”</em> 라고 소개하고 있습니다.</h5>\n</blockquote>","fields":{"slug":"../../static/debounce-and-throttle","tagSlugs":["/tag/java-script/","/tag/debounce/","/tag/throttle/","/tag/lazy/","/tag/performance/"]},"frontmatter":{"date":"2019-11-17T13:00:02.169Z","description":"Debounce와 Throttle의 차이점이 뭘까요? 또한 언제 어떤 기능을 쓰는 것이 좋을까요?","tags":["JavaScript","debounce","throttle","lazy","performance"],"title":"Debounce와 Throttle 구별 및 활용"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"../../static/debounce-and-throttle"}}}