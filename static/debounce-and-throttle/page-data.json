{"componentChunkName":"component---src-templates-post-template-js","path":"/../../static/debounce-and-throttle","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"id":"a00ea527-f7d0-5bac-96aa-c5e2bcda926d","html":"<h1 id=\"intro\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h1>\n<p>debounce와 throttle은 프로그래밍에서 요청이나 처리의 빈도를 제한하거나 지연시키고자 할 때 자주 사용됩니다. 둘은 위와 같은 상황에서 쓰인다는 것에서 비슷하지만 동작하는 방식은 조금 다릅니다. </p>\n<h1 id=\"심플한-정의\"><a href=\"#%EC%8B%AC%ED%94%8C%ED%95%9C-%EC%A0%95%EC%9D%98\" aria-label=\"심플한 정의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>심플한 정의</h1>\n<p>debounce와 throttle을 한마디로 정의하면 다음과 같습니다.</p>\n<h2 id=\"debounce\"><a href=\"#debounce\" aria-label=\"debounce permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>debounce</h2>\n<blockquote>\n<p>요청이 들어오고 일정 시간을 기다린 후 요청을 수행한다. 만약 일정 시간 안에 같은 요청이 추가로 들어오면 <strong>이전 요청은 취소된다.</strong></p>\n</blockquote>\n<h2 id=\"throttle\"><a href=\"#throttle\" aria-label=\"throttle permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>throttle</h2>\n<blockquote>\n<p>일정 시간 동안 요청이 <strong>한 번만</strong> 수행되도록 한다.</p>\n</blockquote>\n<p>백문이 불여일견입니다. 예제코드를 살펴보겠습니다. 예제에서는 <a href=\"https://lodash.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lodash</a>에서 제공하는 <code class=\"language-text\">debounce</code>, <code class=\"language-text\">throttle</code>을 사용하겠습니다.</p>\n<p>두 함수 모두 첫 번째 파라미터로 debouncing, throttling할 함수를 받고, 두 번째 파라미터로 시간을 밀리초(ms)로 받습니다.</p>\n<hr>\n<p>먼저 throttle입니다. 아래 코드는 화면의 버튼이 클릭되면 console에 현재시간(초, 밀리초)를 출력합니다. throttle time은 500ms로 설정했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> throttle  <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash/throttle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> throttleButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'throttle-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nthrottleButton<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Throttled Button Clicked'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ss.SS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>이제 5초동안 계속해서 버튼을 클릭해보겠습니다. 콘솔에 출력된 결과는 다음과 같습니다!</p>\n<br> \n<p><img src=\"/debounce-and-throttle-image/throttle-console.png\" alt=\"throttle예제\"></p>\n<blockquote>\n<p>throttle, 500ms</p>\n</blockquote>\n<p>약간의 오차는 있지만 0.5초 간격으로 click 이벤트리스너가 실행되고 있습니다. </p>\n<p>이와 같이 throttle은 정해진 시간동안 요청이 <strong>단 한번만</strong> 처리되도록 해줍니다.</p>\n<hr>\n<p>다음으로 debounce를 살펴보겠습니다. 코드는 throttle과 유사합니다.</p>\n<p>버튼이 클릭되면 console에 현재시간(초, 밀리초)를 출력합니다. debounce 시간은 1000ms입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> debounce  <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash/debounce'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> debounceButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'debounce-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndebounceButton<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Debounce Button Clicked'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ss.SS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>아까와 같이 5초동안 버튼을 계속해서 클릭해보겠습니다.</p>\n<br>\n<p><img src=\"/debounce-and-throttle-image/debounce-console.png\" alt=\"debounce예제\"></p>\n<blockquote>\n<p>debounce, 1000ms</p>\n</blockquote>\n<p>throttle과는 다르게 이벤트리스너가 한 번만 실행됐습니다. 위에서 설명했듯이 debounce는 일정 시간 동안 요청이 추가로 들어오지 않는 경우에만 수행됩니다. 저는 10초 동안 계속해서 버튼을 클릭했기 때문에 마지막 클릭이 만들어낸 요청만 수행됐습니다.</p>\n<h1 id=\"사전적-의미\"><a href=\"#%EC%82%AC%EC%A0%84%EC%A0%81-%EC%9D%98%EB%AF%B8\" aria-label=\"사전적 의미 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전적 의미</h1>\n<p>추가로 throttle과 debouce의 사전적 의미를 통해 그 동작을 확실하게 이해해보겠습니다. </p>\n<h2 id=\"throttle-1\"><a href=\"#throttle-1\" aria-label=\"throttle 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>throttle</h2>\n<p>아래는 <em>네이버 사전</em>에서 throttle을 검색한 결과입니다.</p>\n<p><img src=\"/debounce-and-throttle-image/throttle-dic.png\" alt=\"throttle-dic\"></p>\n<p><strong><em>‘목을 조르다’</em></strong> 라는 뜻이 가장 먼저 나옵니다. 이 의미에 비추어 보았을 때 throttle은 <em>“요청이 지나가는 통로를 목을 조르듯 조여서 요청의 개수를 조절한다”</em>라고 이해할 수 있습니다.</p>\n<p>throttle time을 1000ms로 한다면 1000ms에 한 요청만 지나갈 수 있도록 통로를 조이는 것입니다. <strong>병목현상</strong>을 의도적으로 만드는 것으로 볼 수도 있겠네요. </p>\n<p>(물론 나머지 요청은 폐기하므로 메모리에 요청이 쌓여있거나 하지는 않습니다)</p>\n<p><img src=\"/debounce-and-throttle-image/choke.png\" alt=\"쵸코슬램\"></p>\n<blockquote>\n<p>throttle을 사용하고 있는 배우</p>\n</blockquote>\n<h2 id=\"debounce-1\"><a href=\"#debounce-1\" aria-label=\"debounce 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>debounce</h2>\n<p>debounce는 전기공학에서 쓰이던 전문용어입니다. <a href=\"https://terms.naver.com/entry.nhn?docId=820206&#x26;cid=50376&#x26;categoryId=50376\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">네이버 지식백과</a>에서는 <em>“기계식 스위치의 동작을 전기적 신호로 바꿀 때 생기는 진동 잡음을 제거하기 위하여 사용하는 하드웨어의 지연 회로”</em> 라고 소개하고 있습니다.</p>\n<h1 id=\"wrapping-up\"><a href=\"#wrapping-up\" aria-label=\"wrapping up permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wrapping up</h1>\n<p>debounce와 throttle의 차이에 대해서 간단하게 살펴봤습니다. 이 둘은 유사하지만 다르기 때문에 적절하게 사용하지 않으면 오히려 사용성을 해칠 수 있습니다. </p>\n<p>예를 들어 SNS에서 자주 쓰이는 <strong>무한 스크롤</strong> 기능에서는 debounce보다 throttle이 적합합니다. 유저가 스크롤링을 멈출 때까지 기다렸다가 새로운 글을 불러오는 것보다는 유저의 스크롤이 어느 정도 내려왔을 때 미리 글을 불러오는 것이 좀 더 좋은 경험을 제공할 수 있을 것입니다.</p>\n<p>반면 toggle 버튼의 이벤트 리스너에는 debounce가 더 적합합니다. </p>\n<p>저는 모바일에서 toggle 버튼이 있으면 항상 여러 번 눌러봅니다. 애니메이션을 보는 것이 재밌기도 하지만 앱이 죽나 안 죽나 보고 싶기도 합니다. 저와 같은 유저들의 횡포를 막기 위해서 toggle 이벤트 리스너에 어느 정도 debounce를 줘서 마지막으로 일어난 toggle의 요청만 처리하는 것이 좋을 것입니다.</p>\n<p><img src=\"/debounce-and-throttle-image/material-toggle.png\" alt=\"material-toggle\"></p>\n<blockquote>\n<p>I love toggle</p>\n</blockquote>\n<h2 id=\"참조\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<ul>\n<li><a href=\"https://css-tricks.com/debouncing-throttling-explained-examples/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://css-tricks.com/debouncing-throttling-explained-examples/</a></li>\n</ul>","fields":{"slug":"../../static/debounce-and-throttle","tagSlugs":["/tag/java-script/","/tag/debounce/","/tag/throttle/","/tag/lazy/","/tag/performance/"]},"frontmatter":{"date":"2019-11-17T13:00:02.169Z","description":"Debounce와 Throttle의 차이점이 뭘까요? 간단한 예제로 알아보겠습니다.","tags":["JavaScript","debounce","throttle","lazy","performance"],"title":"Debounce와 Throttle의 차이"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"../../static/debounce-and-throttle"}}}